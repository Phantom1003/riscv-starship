diff --git a/src/main/scala/shell/xilinx/VC707Shell.scala b/src/main/scala/shell/xilinx/VC707Shell.scala
index cad8b0d..0fc8931 100644
--- a/src/main/scala/shell/xilinx/VC707Shell.scala
+++ b/src/main/scala/shell/xilinx/VC707Shell.scala
@@ -32,7 +32,21 @@ trait HasDDR3 { this: VC707Shell =>
     dut.xilinxvc707mig.aresetn   := mig_resetn
     dut.xilinxvc707mig.sys_rst   := sys_reset
 
-    ddr <> dut.xilinxvc707mig
+    ddr.ddr3_addr                := dut.xilinxvc707mig.ddr3_addr
+    ddr.ddr3_ba                  := dut.xilinxvc707mig.ddr3_ba
+    ddr.ddr3_ras_n               := dut.xilinxvc707mig.ddr3_ras_n
+    ddr.ddr3_cas_n               := dut.xilinxvc707mig.ddr3_cas_n
+    ddr.ddr3_we_n                := dut.xilinxvc707mig.ddr3_we_n
+    ddr.ddr3_reset_n             := dut.xilinxvc707mig.ddr3_reset_n
+    ddr.ddr3_ck_p                := dut.xilinxvc707mig.ddr3_ck_p
+    ddr.ddr3_ck_n                := dut.xilinxvc707mig.ddr3_ck_n
+    ddr.ddr3_cke                 := dut.xilinxvc707mig.ddr3_cke
+    ddr.ddr3_cs_n                := dut.xilinxvc707mig.ddr3_cs_n
+    ddr.ddr3_dm                  := dut.xilinxvc707mig.ddr3_dm
+    ddr.ddr3_odt                 := dut.xilinxvc707mig.ddr3_odt
+    ddr.ddr3_dq                  <> dut.xilinxvc707mig.ddr3_dq
+    ddr.ddr3_dqs_n               <> dut.xilinxvc707mig.ddr3_dqs_n
+    ddr.ddr3_dqs_p               <> dut.xilinxvc707mig.ddr3_dqs_p
   }
 }
 
@@ -471,8 +485,11 @@ abstract class VC707Shell(implicit val p: Parameters) extends RawModule {
   // Clock that drives the clock generator and the MIG
   sys_clock := sys_clk_ibufds.io.O
 
+  val reset_ibuf = Module(new IBUF)
+  reset_ibuf.io.I := reset
+
   // Allow the debug module to reset everything. Resets the MIG
-  sys_reset := reset | dut_ndreset
+  sys_reset := reset_ibuf.io.O | dut_ndreset
 
   //-----------------------------------------------------------------------
   // Clock Generator
@@ -492,7 +509,7 @@ abstract class VC707Shell(implicit val p: Parameters) extends RawModule {
       PLLOutClockParameters(100, 180)))))
   
   vc707_sys_clock_mmcm0.io.clk_in1 := sys_clock
-  vc707_sys_clock_mmcm0.io.reset   := reset
+  vc707_sys_clock_mmcm0.io.reset   := sys_reset
   val vc707_sys_clock_mmcm0_locked = vc707_sys_clock_mmcm0.io.locked
   val Seq(clk12_5, clk25, clk37_5, clk50, clk100, clk150, clk100_180) = vc707_sys_clock_mmcm0.getClocks
 
@@ -506,7 +523,7 @@ abstract class VC707Shell(implicit val p: Parameters) extends RawModule {
       PLLOutClockParameters(65, 180)))))
   
   vc707_sys_clock_mmcm1.io.clk_in1 := sys_clock
-  vc707_sys_clock_mmcm1.io.reset   := reset
+  vc707_sys_clock_mmcm1.io.reset   := sys_reset
   val clk32_5              = vc707_sys_clock_mmcm1.io.clk_out1
   val clk65                = vc707_sys_clock_mmcm1.io.clk_out2
   val vc707_sys_clock_mmcm1_locked = vc707_sys_clock_mmcm1.io.locked
